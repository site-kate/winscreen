name: winscreen

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 250 # 4 hours, 10 minutes buffer

    steps:
      - name: Enable Windows Audio Service and Hyper-V Audio Registry
        shell: pwsh
        run: |
          # Start Windows Audio service
          Start-Service -Name "AudioSrv"

          # Set registry for audio in RDP/Hyper-V sessions
          Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" -Name "fDisableAudioCapture" -Value 0
          Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" -Name "fDisableAudio" -Value 0

          # Ensure audio endpoint builder also running
          Start-Service -Name "AudioEndpointBuilder"

      - name: Download getscreen.me client
        run: |
          Invoke-WebRequest -Uri "https://getscreen.me/download/getscreen.msi" -OutFile "getscreen.msi"

      - name: Install getscreen.me client
        run: |
          Start-Process msiexec.exe -Wait -ArgumentList '/i getscreen.msi /qn'

      - name: Register getscreen.me client with account
        shell: pwsh
        run: |
          $exePath = "C:\Program Files\Getscreen.me\getscreen.exe"
          if (-not (Test-Path $exePath)) {
            Write-Error "getscreen.exe not found after installation at $exePath!"
            exit 1
          }
          Write-Host "Using getscreen.exe at $exePath"
          # Register with account
          Start-Process -FilePath $exePath -ArgumentList "-install -register site-cat@proton.me" -Wait

      - name: Output getscreen session link
        shell: pwsh
        run: |
          $exePath = "C:\Program Files\Getscreen.me\getscreen.exe"
          if (-not (Test-Path $exePath)) {
            Write-Error "getscreen.exe not found after installation at $exePath!"
            exit 1
          }
          # Start getscreen session and output link
          Start-Process -FilePath $exePath -ArgumentList "--cli start" -NoNewWindow -RedirectStandardOutput "link.txt" -PassThru
          Start-Sleep -Seconds 10
          $link = Get-Content "link.txt" | Select-String -Pattern "https://getscreen.me" | Select-Object -First 1
          Write-Host "GetScreen access link (valid while workflow runs):"
          Write-Host $link

      - name: Keep runner alive for 4 hours
        run: |
          echo "Sleeping for 4 hours to keep session active..."
          Start-Sleep -Seconds 14400
